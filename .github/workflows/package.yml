name: Build MODX Package

on:
  push:
    branches: [ main, master ]

env:
  PHP_VERSION: '8.1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          extensions: mbstring, xml, zip, curl, dom

      - name: Install Composer
        run: |
          EXPECTED_CHECKSUM="$(php -r 'copy("https://composer.github.io/installer.sig", "php://stdout");')"
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
          if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]; then
            echo 'ERROR: Invalid composer installer checksum'; exit 1
          fi
          php composer-setup.php --quiet
          rm composer-setup.php
          sudo mv composer.phar /usr/local/bin/composer

      - name: Pull MODX core via Composer
        run: |
          composer init --no-interaction --name temp/build --description "temp" || true
          composer require modx/revolution:^2.8 --no-interaction --prefer-dist

      - name: Create MODX stub config
        run: |
          mkdir -p vendor/modx/revolution/core/config
          cat > vendor/modx/revolution/core/config/config.inc.php << 'PHP'
          <?php
          $database_type = 'mysql';
          $database_server = 'localhost';
          $database_user = 'root';
          $database_password = '';
          $database_connection_charset = 'utf8';
          $dbase = 'modxdb';
          $table_prefix = 'modx_';
          $database_dsn = 'mysql:host=localhost;dbname=modxdb;charset=utf8';
          $config_options = array();
          $driver_options = array();
          $lastInstallTime = 0;
          $site_id = 'modxci';
          $site_sessionname = 'MODXSESSID';
          $https_port = 443;
          $uuid = 'modxci-uuid';
          if (!defined('MODX_CORE_PATH')) define('MODX_CORE_PATH', dirname(__DIR__) . '/');
          if (!defined('MODX_CONFIG_KEY')) define('MODX_CONFIG_KEY', 'config');
          PHP

      - name: Ensure repo core/packages exists
        run: mkdir -p core/packages

      - name: Build the MODX package
        working-directory: _build
        run: php -d display_errors=1 -d error_reporting=32767 build.transport.php

      - name: List package locations
        run: |
          echo "Repo core/packages:"
          ls -la core/packages || true
          echo "Vendor MODX core/packages:"
          ls -la vendor/modx/revolution/core/packages || true
          echo "Search for zips:"
          find . -type f -name "*.transport.zip" -maxdepth 5 -print

      - name: Upload built package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: yandexmaps-package
          path: core/packages/*.transport.zip
          retention-days: 30